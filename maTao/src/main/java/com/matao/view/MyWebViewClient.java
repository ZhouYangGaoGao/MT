/** *TODO * * */package com.matao.view;import android.graphics.Bitmap;import android.view.KeyEvent;import android.webkit.SslErrorHandler;import android.webkit.WebView;import android.webkit.WebViewClient;/** * @author: ZhouYang * @time:2015-5-21 下午3:47:26 * @Description:TODO */public class MyWebViewClient extends WebViewClient {	// 重写父类方法，让新打开的网页在当前的WebView中显示	public boolean shouldOverrideUrlLoading(WebView view, String url) {		view.loadUrl(url);		return true;	}	// 重写此方法才能够处理在浏览器中的按键事件。	public boolean shouldOverrideKeyEvent(WebView view, KeyEvent event) {		if ((event.getKeyCode() == KeyEvent.KEYCODE_BACK) && view.canGoBack()) {			view.goBack();// 如果webview可以回退就回退网页			return true;		}		return false;	}	// 重写此方法可以让webview处理https请求。	public void onReceivedSslError(WebView view, SslErrorHandler handler,			android.net.http.SslError error) {		handler.proceed();	}	// 在加载页面资源时会调用，每一个资源（比如图片）的加载都会调用一次。	public void onLoadResource(WebView view, String url) {		super.onLoadResource(view, url);	}	// 在页面加载开始时调用。	public void onPageStarted(WebView view, String url, Bitmap favicon) {		if (url.endsWith(".apk")) {			// download(url);// 下载处理		}		super.onPageStarted(view, url, favicon);	}	// 在页面加载结束时调用。	public void onPageFinished(WebView view, String url) {		super.onPageFinished(view, url);		view.loadUrl("javascript:getImgListMethod()");	}}