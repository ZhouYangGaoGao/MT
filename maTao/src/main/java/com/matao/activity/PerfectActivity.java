package com.matao.activity;import java.util.Calendar;import org.json.JSONException;import android.app.Dialog;import android.content.Intent;import android.text.TextUtils;import android.view.Display;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.Window;import android.view.WindowManager;import android.widget.Button;import android.widget.CheckBox;import android.widget.DatePicker;import android.widget.EditText;import android.widget.LinearLayout;import android.widget.PopupWindow;import android.widget.TextView;import com.alibaba.fastjson.JSON;import com.lidroid.xutils.ViewUtils;import com.lidroid.xutils.http.RequestParams;import com.lidroid.xutils.view.annotation.ViewInject;import com.lidroid.xutils.view.annotation.event.OnClick;import com.matao.bean.Bean;import com.matao.bean.Data;import com.matao.fragment.BaseFragment;import com.matao.matao.R;import com.matao.utils.Logger;import com.matao.utils.MD5Util;import com.matao.utils.MTApplication;import com.matao.utils.MTUtils;import com.matao.utils.SendActtionTool;import com.matao.utils.ServiceAction;import com.matao.utils.URLs;import com.matao.utils.UserAction;import com.matao.view.MyDatePicker;import com.matao.view.TopBar;import com.matao.view.TopBar.topBarClickListener;/** * @author: ZhouYang * @time:2015-5-14 下午5:07:42 * @Description:完善资料 */public class PerfectActivity extends BaseActivity {	public static final int CODE_SELECT_AREA = 1000;	public final int DATE = 1001;	public final int BIRTHDAY = 1002;	public final int GENDER = 1003;	public final int ZHUANGTAI = 1004;	// private int dialogCode = DATE;	private boolean isMidier = false;	private PopupWindow pro;	// 记录当前的日期	private int year;	private int month;	private int day;	Dialog dzt;// 选择状态弹窗	Dialog dbbsex;// 选择宝宝性别弹窗	Dialog ddate;// 选择日期弹窗	@Override	public void onException(ServiceAction service, Object action, Object value) {		super.onException(service, action, value);		ClosePop();		// MTUtils.Toast(this, "请求出现异常，请稍后再试");	}	@Override	public void onStart(ServiceAction service, Object action) {		super.onStart(service, action);		View v = LayoutInflater.from(this).inflate(R.layout.progressdialog,				null);		pro = new PopupWindow(v, 200, 200);		pro.setFocusable(true); // 设置不允许在外点击消失		pro.setOutsideTouchable(false);		MTUtils.KeyBoardCancle(this);		pro.showAtLocation(View.inflate(this, R.layout.activity_login, null),				Gravity.CENTER, 0, 0);	}	// 初始化控件	@ViewInject(R.id.perfect_topbar)	TopBar topBar;// 顶部	@ViewInject(R.id.perfect_input_psd)	EditText input_psd;// 输入密码	@ViewInject(R.id.perfect_input_psd_agin)	EditText input_psd_agin;// 再次输入密码	@ViewInject(R.id.perfect_nickName)	EditText nickName;// 昵称	@ViewInject(R.id.perfect_selectArea)	TextView selectArea;// 选择地区	@ViewInject(R.id.perfect_Zhuangtai)	TextView zhuangtai;// 当前状态	@ViewInject(R.id.perfect_select_yuchanqi)	TextView yuchanqi;// 选择预产期	@ViewInject(R.id.perfect_babyNickName)	EditText babyNickName;// 宝宝昵称	@ViewInject(R.id.perfect_birthDay)	TextView birthDay;// 宝宝生日	@ViewInject(R.id.perfect_babySex)	TextView babySex;// 宝宝性别	@ViewInject(R.id.perfect_completRgst)	Button complet;// 完成注册	@ViewInject(R.id.perfect_checkBox)	CheckBox checkBox;// 阅读	@ViewInject(R.id.perfect_userProtocol)	TextView userProtocol;// 用户协议	@ViewInject(R.id.perfect_haveBaby)	LinearLayout haveBaby_layout;// 宝宝信息区域	@ViewInject(R.id.perfect_yuchanqi_layout)	LinearLayout yuchanqi_layout;// 预产期区域	@ViewInject(R.id.perfect_inputpsdLayout)	LinearLayout inputpsdLayout;// 密码区域	@ViewInject(R.id.dialog_zhuangtai_zhunbei)	LinearLayout zhuangtai_zhunbei;// 状态-准备	@ViewInject(R.id.dialog_zhuangtai_huaiyun)	LinearLayout zhuangtai_huaiyun;// 状态-怀孕	@ViewInject(R.id.dialog_zhuangtai_havebaby)	LinearLayout zhuangtai_havebaby;// 状态-已有宝宝	@ViewInject(R.id.dialog_date_datePicker)	DatePicker date;// 日期选择器	@ViewInject(R.id.dialog_date_Title)	TextView date_Title;// 日期选择器-标题	@ViewInject(R.id.dialog_date_N)	TextView date_N;// 日期选择器-取消	@ViewInject(R.id.dialog_date_Y)	TextView date_Y;// 日期选择器-确定	@ViewInject(R.id.dialog_sex_nan)	LinearLayout nan;// 选择性别-男	@ViewInject(R.id.dialog_sex_nv)	LinearLayout nv;// 选择性别-女	@ViewInject(R.id.dialog_sex_N)	TextView sex_N;// 选择性别-取消	// 点击事件 初始化和结果处理	@OnClick({ R.id.perfect_Zhuangtai, R.id.dialog_zhuangtai_havebaby,			R.id.dialog_zhuangtai_huaiyun, R.id.dialog_zhuangtai_zhunbei,			R.id.perfect_selectArea, R.id.perfect_select_yuchanqi,			R.id.perfect_babySex, R.id.perfect_birthDay,			R.id.dialog_zhuangtai_N, R.id.dialog_date_N, R.id.dialog_date_Y,			R.id.perfect_completRgst, R.id.dialog_sex_N, R.id.dialog_sex_nv,			R.id.dialog_sex_nan, R.id.perfect_userProtocol,			R.id.rg_layout_area, R.id.rg_layout_birth, R.id.rg_layout_sex,			R.id.rg_layout_zt, R.id.perfect_yuchanqi_layout })	public void onClick(View v) {		switch (v.getId()) {		case R.id.perfect_select_yuchanqi:// 选择预产期			ddate = datePickerShow(ddate, DATE, R.layout.dialog_time_birday);			MTApplication.mEditor.putString("DateStyle", "yuchanqi");			MTApplication.mEditor.commit();			break;		case R.id.perfect_yuchanqi_layout:// 选择预产期			ddate = datePickerShow(ddate, DATE, R.layout.dialog_time_birday);			MTApplication.mEditor.putString("DateStyle", "yuchanqi");			MTApplication.mEditor.commit();			break;		case R.id.perfect_babySex:// 选择宝宝性别			dbbsex = showDialog(ddate, GENDER, R.layout.dialog_perfect_sex);			break;		case R.id.rg_layout_sex:// 选择宝宝性别			dbbsex = showDialog(ddate, GENDER, R.layout.dialog_perfect_sex);			break;		case R.id.dialog_sex_nv:			babySex.setTextColor(this.getResources().getColor(					R.color.black_word));			babySex.setText("女宝宝");			babyGender = true;			dbbsex.dismiss();			break;		case R.id.dialog_sex_nan:			babySex.setTextColor(this.getResources().getColor(					R.color.black_word));			babySex.setText("男宝宝");			babyGender = false;			dbbsex.dismiss();			break;		case R.id.dialog_sex_N:			dbbsex.dismiss();			break;		case R.id.perfect_completRgst:			if (checkBox.isChecked()) {				registe();			} else {				MTUtils.Toast(this, "请勾选注册协议哦!");			}			break;		case R.id.perfect_Zhuangtai:// 选择当前状态			dzt = showDialog(dzt, ZHUANGTAI, R.layout.dialog_perfect_zhuangtai);			break;		case R.id.rg_layout_zt:// 选择当前状态			dzt = showDialog(dzt, ZHUANGTAI, R.layout.dialog_perfect_zhuangtai);			break;		case R.id.dialog_zhuangtai_N:			dzt.dismiss();			break;		case R.id.perfect_birthDay:// 选择宝宝生日			ddate = datePickerShow(ddate, BIRTHDAY, R.layout.dialog_time_birday);			MTApplication.mEditor.putString("DateStyle", "birthday");			MTApplication.mEditor.commit();			break;		case R.id.rg_layout_birth:// 选择宝宝生日			ddate = datePickerShow(ddate, BIRTHDAY, R.layout.dialog_time_birday);			MTApplication.mEditor.putString("DateStyle", "birthday");			MTApplication.mEditor.commit();			break;		case R.id.dialog_date_N:			ddate.dismiss();			break;		case R.id.dialog_date_Y:			Logger.i("dialog_date_Y", year + "-" + month + "-" + day);			if (month < 10 && day < 10) {				yuchanqi.setTextColor(this.getResources().getColor(						R.color.black_word));				yuchanqi.setText(year + "-0" + month + "-0" + day);			} else if (month >= 10 && day < 10) {				yuchanqi.setText(year + "-" + month + "-0" + day);			} else if (month < 10 && day >= 10) {				yuchanqi.setText(year + "-0" + month + "-" + day);			} else {				yuchanqi.setText(year + "-" + month + "-" + day);			}			if (month < 10 && day < 10) {				birthDay.setTextColor(this.getResources().getColor(						R.color.black_word));				birthDay.setText(year + "-0" + month + "-0" + day);			} else if (month >= 10 && day < 10) {				birthDay.setText(year + "-" + month + "-0" + day);			} else if (month < 10 && day >= 10) {				birthDay.setText(year + "-0" + month + "-" + day);			} else {				birthDay.setText(year + "-" + month + "-" + day);			}			ddate.dismiss();			break;		case R.id.dialog_zhuangtai_havebaby:			initZhuanT("已有宝宝", View.GONE, View.VISIBLE);			yuchanqi.setText(null);			birthDay.setText("请选择出生日期");			babyState = 0;			break;		case R.id.dialog_zhuangtai_huaiyun:			initZhuanT("已经怀孕", View.VISIBLE, View.GONE);			yuchanqi.setText("请选择预产期");			birthDay.setText(null);			babyState = 1;			break;		case R.id.dialog_zhuangtai_zhunbei:			initZhuanT("准备怀孕", View.GONE, View.GONE);			yuchanqi.setText(null);			birthDay.setText(null);			babyState = 2;			break;		case R.id.perfect_selectArea:// 选择地区			startActivityForResult(new Intent(this, SelectAreaActivity.class),					CODE_SELECT_AREA);			overridePendingTransition(R.anim.slide_left_in,					R.anim.slide_left_out);			break;		case R.id.rg_layout_area:			startActivityForResult(new Intent(this, SelectAreaActivity.class),					CODE_SELECT_AREA);			overridePendingTransition(R.anim.slide_left_in,					R.anim.slide_left_out);			break;		case R.id.perfect_userProtocol:			startActivity(new Intent(this, RegistRreatyActivity.class));			overridePendingTransition(R.anim.slide_left_in,					R.anim.slide_left_out);			break;		}	}	public static String mobileNumber = "";	String nick_Name, passWord, passWord2, babyRealName, babyBirthday, dueDate,			provinceName = "", cityName = "", areaName, ipAddress, babySEX;	int provinceId = 0, cityId = 0, areaId, babyState = -1;	boolean babyGender;	/**	 * 注册前收集数据	 * 	 * 作者:ZhouYang	 * 	 * 2015-5-19上午11:18:31	 * 	 */	private void registe() {		ipAddress = "127.0.0.1";		nick_Name = nickName.getText().toString().trim();// 昵称		passWord = input_psd.getText().toString().trim();// 密码		passWord2 = input_psd_agin.getText().toString().trim();// 密码二		babyRealName = babyNickName.getText().toString().trim();		babyBirthday = birthDay.getText().toString().trim();		babySEX = babySex.getText().toString().trim();		switch (babyState) {		case 0:			dueDate = null;			break;		case 1:			dueDate = yuchanqi.getText().toString().trim();			break;		case 2:			dueDate = null;			break;		}		if (!isMidier) {			if (TextUtils.isEmpty(mobileNumber)					|| !MTUtils.isPhone(mobileNumber)) {				MTUtils.Toast(this, "手机号格式不正确");			} else if (TextUtils.isEmpty(passWord) || passWord == "请输入密码") {				MTUtils.Toast(this, "密码不能为空");			} else if (passWord.getBytes().length < 6					|| passWord.getBytes().length > 16) {				MTUtils.Toast(this, "密码长度6-16位字符");			} else if (MTUtils.checkPassWord(passWord)) {				MTUtils.Toast(this, "密码不能带有特殊字符~");			} else if (TextUtils.isEmpty(passWord2) || passWord2 == "再次输入密码") {				MTUtils.Toast(this, "确认密码不能为空");			} else if (!passWord.equals(passWord2)) {				MTUtils.Toast(this, "两次输入密码不一致");			} else {				fuck();			}		} else {			fuck();		}	}	private void fuck() {		// 当前时间		long times = System.currentTimeMillis();		Logger.i("times", times);		// 用户选取预产期时间		long chose_yctime = MTUtils.getMillTime(year + "-" + month + "-" + day);		Logger.i("chose_yctime", chose_yctime);		// 用户选取生日时间		long chose_birtime = MTUtils				.getMillTime(year + "-" + month + "-" + day);		if (MTUtils.isEmpty(nick_Name)) {			MTUtils.Toast(this, "昵称不能为空");		} else if (MTUtils.getLength(nick_Name) < 4) {			MTUtils.Toast(this, "昵称不得少于4个字符哦~");		} else if (MTUtils.getLength(nick_Name) > 16) {			MTUtils.Toast(this, "昵称不得大于16个字符哦~");		} else if (!MTUtils.checkNickName(nick_Name)) {			MTUtils.Toast(this, "昵称不能使用特殊符号");		} else if (MTUtils.isEmpty(provinceName)				|| MTUtils.isEmpty(String.valueOf(provinceId))) {			MTUtils.Toast(this, "请选择省份");		} else if (MTUtils.isEmpty(cityName)				|| MTUtils.isEmpty(String.valueOf(cityId))) {			MTUtils.Toast(this, "请选择城市");		} else if (babyState == -1) {			MTUtils.Toast(this, "请选择当前状态");		} else if (babyState == 0) {			if (MTUtils.isEmpty(babyRealName.toString())) {				MTUtils.Toast(this, "请填写宝宝昵称");			} else if (!MTUtils.checkBabyNickName(babyRealName.toString())) {				MTUtils.Toast(this, "宝宝昵称为字母和汉字");			} else if (MTUtils.getLength(babyRealName) > 16) {				MTUtils.Toast(this, "宝宝乳名不能超过16个字符");			} else if (MTUtils.getLength(babyRealName) < 4) {				MTUtils.Toast(this, "宝宝乳名不能少于4个字符");			} else if (MTUtils.isEmpty(babyBirthday)					|| babyBirthday.equals("请选择出生日期")) {				MTUtils.Toast(this, "请选择出生日期");			} else if (chose_birtime > times) {				MTUtils.Toast(this, "亲，生日不能选择今天之后哦~");			} else if (MTUtils.isEmpty(babySEX) || babySEX.equals("选择宝宝性别")) {				MTUtils.Toast(this, "请选择宝宝性别");			} else {				register();			}		} else if (babyState == 1) {			if (MTUtils.isEmpty(dueDate) || dueDate.equals("请选择预产期")) {				MTUtils.Toast(this, "请选择预产期");			} else if (!MTUtils.isEmpty(dueDate) && chose_yctime < times) {				MTUtils.Toast(this, "亲，预产期只能选择今天之后哦~");			} else if (!MTUtils.isEmpty(dueDate)					&& chose_yctime > (times + 280l * 24 * 3600 * 1000)) {				Logger.i("times+280", times + 280l * 24 * 3600 * 1000);				MTUtils.Toast(this, "亲，预产期可能不会超过280天 哦~");			} else {				register();			}		} else {			register();		}	}	// 注册	private void register() {		if (isMidier) {			register2();		} else {			String TimeStamp = MTUtils.getTimeStamp();			org.json.JSONObject json = new org.json.JSONObject();			try {				json.put(						"Sign",						MD5Util.getLowerCaseMD5(mobileNumber								+ MD5Util.getLowerCaseMD5(passWord) + TimeStamp								+ URLs.KEY));				json.put(URLs.TIME_STAMP, TimeStamp);				json.put(URLs.PASSWORD, MD5Util.getLowerCaseMD5(passWord));				json.put("MobileNumber", mobileNumber);				json.put("NickName", nick_Name);				json.put("IpAddress", ipAddress);				json.put("ProvinceId", provinceId);				json.put("ProvinceName", provinceName);				json.put("CityId", cityId);				json.put("CityName", cityName);				json.put("AreaId", areaId);				json.put("AreaName", areaName);				json.put("BabyState", babyState);				json.put("DueDate", dueDate);				json.put("BabyRealName", babyRealName);				json.put("BabyBirthday", babyBirthday);				json.put("BabyGender", babyGender);				json.put("TimeStamp", TimeStamp);				Logger.i("register", json.toString());			} catch (JSONException e) {				e.printStackTrace();			}			RequestParams p = new RequestParams();			p.addBodyParameter(URLs.JSON_INFO, json.toString());			SendActtionTool.post(URLs.REGISTER, ServiceAction.Action_User,					UserAction.Action_Regiser_Phone, this, p);		}	}	// 三方注册	private void register2() {		String TimeStamp = MTUtils.getTimeStamp();		org.json.JSONObject json = new org.json.JSONObject();		try {			json.put(					"Sign",					MD5Util.getLowerCaseMD5(MediaUserID + MediaKey + TimeStamp							+ URLs.KEY));			json.put(URLs.TIME_STAMP, TimeStamp);			json.put("MediaUserID", MediaUserID);			json.put("MediaCate", MediaCate);			json.put("ExpireDay", ExpireDay);			json.put("MediaKey", MediaKey);			json.put("MediaNickName", MediaNickName);			json.put("ProfileImageUrl", ProfileImageUrl);			json.put("NickName", nick_Name);			json.put("IpAddress", ipAddress);			json.put("ProvinceId", provinceId);			json.put("ProvinceName", provinceName);			json.put("CityId", cityId);			json.put("CityName", cityName);			json.put("AreaId", areaId);			json.put("AreaName", areaName);			json.put("BabyState", babyState);			json.put("DueDate", dueDate);			json.put("BabyRealName", babyRealName);			json.put("BabyBirthday", babyBirthday);			json.put("BabyGender", babyGender);			json.put("TimeStamp", TimeStamp);			Logger.i("register2", json.toString());		} catch (JSONException e) {			e.printStackTrace();		}		RequestParams p = new RequestParams();		p.addBodyParameter(URLs.JSON_INFO, json.toString());		SendActtionTool.post(URLs.REGISTER2, ServiceAction.Action_User,				UserAction.Action_Regiser_Phone, this, p);	}	@Override	public void onSuccess(ServiceAction service, Object action, Object value) {		super.onSuccess(service, action, value);		Logger.i("onSuccess==============>>>>>", value.toString());		MTUtils.Toast(this, "注册成功");		Bean bean = JSON.parseObject(value.toString(), Bean.class);// 获得数据实体，使用alibaba的fastJson解析		Data data = bean.getData();//		String str = bean.getMsg();		MTApplication.mEditor.putInt("UserId", data.getUserId());		MTApplication.mEditor.putInt("Point", data.getPoint());		MTApplication.mEditor.putString("Token", data.getToken());		MTApplication.setThreeLogin(true);		MTApplication.setLogin(true);		BaseFragment.isJump = true;		startActivity(new Intent(this, HomeActivity.class));		overridePendingTransition(R.anim.slide_left_in, R.anim.slide_left_out);		this.finish();		ClosePop();	}	/**	 * 	 * 屏幕底部弹窗	 * 	 * 作者:ZhouYang	 * 	 * 2015-5-18下午5:28:58	 * 	 * @param dialog	 *            要显示的弹窗对象	 * @param layoutId	 *            布局Id	 */	public Dialog showDialog(Dialog dialog, int dialogCode, int layoutId) {		// this.dialogCode = dialogCode;		dialog = new Dialog(this, R.style.MmsDialogTheme);		dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);		View v = View.inflate(this, layoutId, null);		ViewUtils.inject(this, v);		dialog.setContentView(v);		WindowManager.LayoutParams lp = dialog.getWindow().getAttributes();		Display dsp = getWindowManager().getDefaultDisplay();		lp.width = (int) dsp.getWidth();		lp.y = (int) dsp.getHeight();		dialog.getWindow().setAttributes(lp);		dialog.show();		return dialog;	}	/**	 * 用户选择当前状态后设置界面	 * 	 * 作者:ZhouYang	 * 	 * 2015-5-18下午5:15:19	 * 	 * @param zt	 *            状态名称	 * @param vsbYcq	 *            选择预产期布局可见性	 * @param vsbBbInfo	 *            宝宝信息布局可见性	 */	private void initZhuanT(String zt, int vsbYcq, int vsbBbInfo) {		zhuangtai				.setTextColor(this.getResources().getColor(R.color.black_word));		zhuangtai.setText(zt);		dzt.dismiss();		yuchanqi_layout.setVisibility(vsbYcq);		haveBaby_layout.setVisibility(vsbBbInfo);	}	private void initZhuanT2(String zt, int vsbYcq, int vsbBbInfo) {		zhuangtai				.setTextColor(this.getResources().getColor(R.color.black_word));		zhuangtai.setText(zt);		// dzt.dismiss();		yuchanqi_layout.setVisibility(vsbYcq);		haveBaby_layout.setVisibility(vsbBbInfo);	}	@Override	public void setContentView() {		setContentView(R.layout.activity_perfect);	}	private String MediaUserID = " ";	private int MediaCate = 0;	private String MediaKey = " ";	private String ExpireDay = " ";	private String MediaNickName = " ";	private String ProfileImageUrl = " ";	@Override	public void findViewById() {		ViewUtils.inject(this);		Intent i = getIntent();		isMidier = i.getBooleanExtra("isMidier", false);// 是否三方		if (isMidier) {			inputpsdLayout.setVisibility(View.GONE);			MediaUserID = i.getStringExtra("MediaUserID");// 三方媒体 ID			MediaKey = i.getStringExtra("MediaKey");// 三方媒体 token 值			MediaNickName = i.getStringExtra("MediaNickName");// 三方媒体昵称			ProfileImageUrl = i.getStringExtra("ProfileImageUrl");// 第三方用户头像地址			MediaCate = i.getIntExtra("MediaCate", 0);// 三方媒体类型（0、腾讯 1、新浪 2 微信）			ExpireDay = i.getStringExtra("ExpireDay");// 三方媒体签名有效天数			Logger.i("inputpsdLayout", inputpsdLayout);			Logger.i("MediaUserID", MediaUserID);			Logger.i("MediaKey", MediaKey);			Logger.i("MediaNickName", MediaNickName);			Logger.i("ProfileImageUrl", ProfileImageUrl);			Logger.i("MediaCate", MediaCate);			Logger.i("ExpireDay", ExpireDay);		} else {			inputpsdLayout.setVisibility(View.VISIBLE);		}		topBar.setOnTopBarClickListener(new topBarClickListener() {			@Override			public void rightClick() {			}			@Override			public void leftClick() {				finish();			}		});		fuck2();	}	@Override	public void onFaile(ServiceAction service, Object action, Object value) {		super.onFaile(service, action, value);		MTApplication.setLogin(false);		Logger.i("onFaile", value.toString());		org.json.JSONObject object;		try {			ClosePop();			object = new org.json.JSONObject(value.toString());			String str = object.optString("Msg", "");			MTUtils.Toast(this, str);		} catch (JSONException e) {			e.printStackTrace();		}	}	@Override	protected void onActivityResult(int rq, int rs, Intent it) {		super.onActivityResult(rq, rs, it);		if (it != null) {			switch (rq) {			case CODE_SELECT_AREA:				provinceName = it.getStringExtra("provinceName");				provinceId = it.getIntExtra("provinceId", 110000);				cityName = it.getStringExtra("cityName");				cityId = it.getIntExtra("cityId", 110000);				areaName = it.getStringExtra("areaName");				areaId = it.getIntExtra("areaId", 110000);				selectArea.setTextColor(this.getResources().getColor(						R.color.black_word));				selectArea.setText(provinceName + " " + cityName + " "						+ areaName);				break;			}		}	}//	private String BABYSEX;	// 根据逛一逛时用户填写的信息填充注册所需数据	public void fuck2() {		int state = MTApplication.getInt("BabyState");		Logger.e("state---------------------------", state);		if (state == 0) {			initZhuanT2("已有宝宝", View.GONE, View.VISIBLE);			yuchanqi.setText(null);			if (MTUtils.isEmpty(MTApplication.getString("BabyBirth"))) {				birthDay.setText("选择宝宝生日");			} else {				birthDay.setTextColor(this.getResources().getColor(						R.color.black_word));				birthDay.setText(MTApplication.getString("BabyBirth"));			}//			BABYSEX = MTApplication.getString("BabySex");			if (MTUtils.isEmpty(MTApplication.getString("BabySex"))) {				babySex.setText("选择宝宝性别");			} else {				babySex.setTextColor(this.getResources().getColor(						R.color.black_word));				babySex.setText(MTApplication.getString("BabySex"));			}			babyState = 0;		} else if (state == 1) {			initZhuanT2("已经怀孕", View.VISIBLE, View.GONE);			yuchanqi.setText(MTApplication.getString("BabyDue"));			birthDay.setText(null);			babyState = 1;		} else if (state == 2) {			initZhuanT2("准备怀孕", View.GONE, View.GONE);			yuchanqi.setText(null);			birthDay.setText(null);			babyState = 2;		}	}	/**	 * 日期选择	 * 	 * @param textView	 * @return	 */	protected Dialog datePickerShow(Dialog dialog, int dialogCode, int layoutId) {		// this.dialogCode = dialogCode;		dialog = new Dialog(PerfectActivity.this, R.style.FullHeightDialog);		dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);		View v = View.inflate(PerfectActivity.this, layoutId, null);		ViewUtils.inject(this, v);		dialog.setContentView(v);		switch (dialogCode) {		case DATE:			date_Title.setText("选择预产期");			MTApplication.mEditor.putString("DateStyle", "yuchanqi");			MTApplication.mEditor.commit();			break;		case BIRTHDAY:			date_Title.setText("选择宝宝生日");			MTApplication.mEditor.putString("DateStyle", "birthday");			MTApplication.mEditor.commit();			break;		}		dialog.setCanceledOnTouchOutside(true);		Window dialogWindow = dialog.getWindow();		dialogWindow.setGravity(Gravity.BOTTOM);		WindowManager m = PerfectActivity.this.getWindowManager();		Display d = m.getDefaultDisplay(); // 获取屏幕宽、高用		WindowManager.LayoutParams p = dialog.getWindow().getAttributes(); // 获取对话框当前的参数值		p.width = (int) (d.getWidth() * 1); // 宽度设置为屏幕的0.95		dialogWindow.setAttributes(p);		dialogWindow.getDecorView().setPadding(0, 0, 0, 0);		MyDatePicker dpicker = (MyDatePicker) dialog				.findViewById(R.id.datepicker_layout);		dpicker.setOnChangeListener(new MyDatePicker.OnChangeListener() {			@Override			public void onChange(int year2, int month2, int day2,					int day_of_week2) {				year = year2;				Calendar calendar = Calendar.getInstance();				calendar.get(Calendar.YEAR);				if (calendar.get(Calendar.YEAR) == year) {					year = calendar.get(Calendar.YEAR)-11;				}				month = month2;				day = day2;				if (month < 10 && day < 10) {				} else if (month >= 10 && day < 10) {				} else if (month < 10 && day >= 10) {				}			}		});		dialog.show();		return dialog;	}	@Override	public void finish() {		super.finish();		overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);	}	@Override	public void onBackPressed() {		super.onBackPressed();		finish();	}	/**	 * ZhangYaWei 2015.5.14 关闭加载体提示	 **/	public void ClosePop() {		if (pro != null && pro.isShowing()) {			pro.dismiss();			pro = null;		}	}}