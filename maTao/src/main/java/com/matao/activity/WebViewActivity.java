package com.matao.activity;import android.annotation.SuppressLint;import android.app.Dialog;import android.content.ClipboardManager;import android.content.Context;import android.content.Intent;import android.graphics.Bitmap;import android.graphics.drawable.AnimationDrawable;import android.net.http.SslError;import android.os.CountDownTimer;import android.os.Handler;import android.os.Message;import android.view.Display;import android.view.LayoutInflater;import android.view.View;import android.view.Window;import android.view.WindowManager;import android.webkit.JavascriptInterface;import android.webkit.SslErrorHandler;import android.webkit.WebChromeClient;import android.webkit.WebSettings;import android.webkit.WebSettings.LayoutAlgorithm;import android.webkit.WebView;import android.webkit.WebViewClient;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.lidroid.xutils.ViewUtils;import com.lidroid.xutils.view.annotation.ContentView;import com.lidroid.xutils.view.annotation.ViewInject;import com.lidroid.xutils.view.annotation.event.OnClick;import com.matao.matao.R;import com.matao.utils.Logger;import com.matao.utils.MTUtils;import com.matao.view.TopBar;import com.matao.view.TopBar.topBarClickListener;/** * @author: ZhouYang * @time:2015-5-14 下午6:03:32 * @Description:内嵌浏览器 */@ContentView(R.layout.activity_webview)public class WebViewActivity extends BaseActivity {	@ViewInject(R.id.anim)	private TextView aini;	private AnimationDrawable aniDraw;	@ViewInject(R.id.webview_web)	private LinearLayout weblayout;	private WebView web;	@ViewInject(R.id.webview_topbar)	private TopBar topbar;	@ViewInject(R.id.webview_b1)	private ImageView zuo;	@ViewInject(R.id.webview_b2)	private ImageView you;	@ViewInject(R.id.webview_b3)	private ImageView share;	@ViewInject(R.id.webview_b4)	private ImageView refre;	private Dialog dialog;	private String url;	private boolean start = false;	@SuppressLint("SetJavaScriptEnabled")	@Override	public void setContentView() {		ViewUtils.inject(this);		// setConfigCallback((WindowManager) getApplicationContext()		// .getSystemService(Context.WINDOW_SERVICE));		url = null;		Intent i = getIntent();		fang = i.getBooleanExtra("fang", true);		url = i.getStringExtra("url");		Logger.i("内嵌", url);		mc = new CountDownTimer(3000, 2999) {			@Override			public void onTick(long arg0) {			}			@Override			public void onFinish() {				if (!isfinish) {					web.reload();				}			}		};		aini.setBackgroundResource(R.anim.animao);		aniDraw = (AnimationDrawable) aini.getBackground();		Client client = new Client();		web = new WebView(getApplicationContext());		web.setLayoutParams(new LinearLayout.LayoutParams(-1, -1));		weblayout.addView(web);		web.setWebViewClient(client);		// 设置setWebChromeClient对象		web.setWebChromeClient(wvcc);		WebSettings settings = web.getSettings();		settings.setJavaScriptEnabled(true);		// 支持对网页缩放		settings.setSupportZoom(true);		// 支持android4.0		settings.setBuiltInZoomControls(true);		// 默认缩放模式		// settings.setDefaultZoom(ZoomDensity.CLOSE);		// web.setInitialScale(100);		settings.setLayoutAlgorithm(LayoutAlgorithm.SINGLE_COLUMN);		web.addJavascriptInterface(new ThreeStub(), "ThreeStub");		web.loadUrl(url);		animaostart();		// topbar.setTitle(url);		topbar.setOnTopBarClickListener(new topBarClickListener() {			@Override			public void rightClick() {			}			@Override			public void leftClick() {				finish();			}		});	}	Handler handler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			Intent intent = new Intent(WebViewActivity.this,					WebViewActivity.class);			intent.putExtra("url", (String) msg.obj);			intent.putExtra("fang", false);			startActivity(intent);		}	};	@Override	public void finish() {		web.clearCache(true);		super.finish();		overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);		// ViewGroup view = (ViewGroup) getWindow().getDecorView();		// view.removeAllViews();	}	@Override	public void onBackPressed() {		finish();	}	@Override	public void findViewById() {	}	public static boolean isTopic = false;	WebChromeClient wvcc = new WebChromeClient() {		@Override		public void onReceivedTitle(WebView view, String title) {			super.onReceivedTitle(view, title);			if (isTopic) {				topbar.setTitle(title);				isTopic = false;			}		}	};	private CountDownTimer mc;	private boolean isfinish = false;	// private String finishUrl = "";	private boolean fang = true;	private class Client extends WebViewClient {		@Override		public boolean shouldOverrideUrlLoading(WebView view, String url) {			if (url.contains("m.matao.com")) {				view.loadUrl(url);			}			return fang;		}		@Override		public void onReceivedSslError(WebView view, SslErrorHandler handler,				SslError error) {			handler.proceed();		}		@Override		public void doUpdateVisitedHistory(WebView view, String url,				boolean isReload) {			super.doUpdateVisitedHistory(view, url, isReload);		}		@Override		public void onPageStarted(WebView view, String url, Bitmap favicon) {			super.onPageStarted(view, url, favicon);			Logger.i("onPageStarted", url);			WebViewActivity.this.url = url;			if (!start) {				start = true;				mc.start();			}		}		@Override		public void onPageFinished(WebView view, String url) {			// view.loadUrl("javascript:getImgListMethod()");			// finishUrl = url;			if (!isfinish) {				isfinish = true;			}			animstop();			if (web.canGoBack()) {				zuo.setImageResource(R.drawable.tab_ico_1);			} else {				zuo.setImageResource(R.drawable.tab_ico_1_gray);			}			if (web.canGoForward()) {				you.setImageResource(R.drawable.tab_ico_2);			} else {				you.setImageResource(R.drawable.tab_ico_2_gray);			}		}		@Override		public void onReceivedError(WebView view, int errorCode,				String description, String failingUrl) {			super.onReceivedError(view, errorCode, description, failingUrl);		}	}	public class ThreeStub {		/**		 * 获得浏览器跳转信息 作者:ZhouYang 2015-5-30上午10:09:29		 */		@JavascriptInterface		public void jsThreeJumpMethod(final String s1) {			Logger.i("jsThreeJumpMethod", s1);			final Message msg = new Message();			new Thread() {				public void run() {					msg.obj = s1;					handler.sendMessage(msg);				};			}.start();		}	}	private void animaostart() {		if (aniDraw != null) {			aniDraw.start();			aini.setVisibility(View.VISIBLE);			web.setVisibility(View.INVISIBLE);		}	}	private void animstop() {		if (aniDraw != null) {			aniDraw.stop();			aini.setVisibility(View.INVISIBLE);			web.setVisibility(View.VISIBLE);		}	}	/**	 * 屏幕底部弹窗	 * 	 * @param dialog	 *            要显示的弹窗对象	 * @param layoutId	 *            布局Id	 */	public Dialog showDialog(Dialog dialog, int layoutId) {		dialog = new Dialog(this, R.style.MmsDialogTheme);		dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);		// View v = View.inflate(this, layoutId, null);		View v = LayoutInflater.from(getApplicationContext()).inflate(layoutId,				null);		ViewWait w = new ViewWait(getApplicationContext());		ViewUtils.inject(w, v);		dialog.setContentView(v);		WindowManager.LayoutParams lp = dialog.getWindow().getAttributes();		Display dsp = getWindowManager().getDefaultDisplay();		lp.width = (int) dsp.getWidth();		lp.y = (int) dsp.getHeight();		dialog.getWindow().setAttributes(lp);		dialog.show();		return dialog;	}	public class ViewWait {		// private Context mContext;		public ViewWait(Context mContext) {			super();			// this.mContext = mContext;		}		@OnClick({ R.id.web_copy, R.id.web_N })		public void onClick(View v) {			switch (v.getId()) {			case R.id.web_copy:				Intent i = getIntent();				url = i.getStringExtra("url");				// 获取剪切板服务				ClipboardManager clipboardManager = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);				clipboardManager.setText(url);				MTUtils.Toast(WebViewActivity.this, "复制成功");				dialog.dismiss();				break;			case R.id.web_N:				dialog.dismiss();				break;			}		}	}	@Override	public void onClick(View arg0) {		switch (arg0.getId()) {		case R.id.webview_b1:			if (web.canGoBack()) {				web.goBack();// 如果webview可以回退就回退网页			} else {				zuo.setImageResource(R.drawable.tab_ico_1_gray);			}			break;		case R.id.webview_b2:			web.goForward();// 前进			break;		case R.id.webview_b3:			// 点击弹出分享弹窗			dialog = showDialog(dialog, R.layout.dialog_web_share);			break;		case R.id.webview_b4:			web.reload();			break;		}	}	// public void setConfigCallback(WindowManager windowManager) {	// try {	// Field field = WebView.class.getDeclaredField("mWebViewCore");	// field = field.getType().getDeclaredField("mBrowserFrame");	// field = field.getType().getDeclaredField("sConfigCallback");	// field.setAccessible(true);	// Object configCallback = field.get(null);	//	// if (null == configCallback) {	// return;	// }	//	// field = field.getType().getDeclaredField("mWindowManager");	// field.setAccessible(true);	// field.set(configCallback, windowManager);	// } catch (Exception e) {	// }	// }	@Override	protected void onDestroy() {		try {			web.clearCache(true);			web.removeAllViews();			web.setVisibility(View.GONE);			// web.destroy();			super.onDestroy();		} catch (Exception e) {			e.printStackTrace();		}		// setConfigCallback(null);	}	private void back() {		if (web.canGoBack()) {			web.goBack();// 如果webview可以回退就回退网页		} else {			web.clearCache(true);			web.removeAllViews();			web.setVisibility(View.GONE);			finish();		}	}}