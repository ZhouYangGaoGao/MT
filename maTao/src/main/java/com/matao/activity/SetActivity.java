package com.matao.activity;import java.util.List;import org.json.JSONException;import android.app.Dialog;import android.content.Intent;import android.content.pm.PackageManager;import android.content.pm.ResolveInfo;import android.net.Uri;import android.view.Display;import android.view.View;import android.view.Window;import android.view.WindowManager;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.TextView;import com.alibaba.fastjson.JSON;import com.lidroid.xutils.ViewUtils;import com.lidroid.xutils.http.RequestParams;import com.lidroid.xutils.view.annotation.ViewInject;import com.lidroid.xutils.view.annotation.event.OnClick;import com.matao.bean.Bean;import com.matao.bean.Data;import com.matao.fragment.BaseFragment;import com.matao.matao.R;import com.matao.utils.Logger;import com.matao.utils.MD5Util;import com.matao.utils.MTApplication;import com.matao.utils.MTUtils;import com.matao.utils.SendActtionTool;import com.matao.utils.ServiceAction;import com.matao.utils.URLs;import com.matao.utils.UserAction;import com.matao.view.TopBar;import com.matao.view.TopBar.topBarClickListener;import com.umeng.socialize.bean.SHARE_MEDIA;import com.umeng.socialize.bean.SocializeEntity;import com.umeng.socialize.controller.UMServiceFactory;import com.umeng.socialize.controller.UMSocialService;import com.umeng.socialize.controller.listener.SocializeListeners.SnsPostListener;import com.umeng.socialize.media.QQShareContent;import com.umeng.socialize.media.QZoneShareContent;import com.umeng.socialize.media.UMImage;import com.umeng.socialize.sso.QZoneSsoHandler;import com.umeng.socialize.sso.SinaSsoHandler;import com.umeng.socialize.sso.UMQQSsoHandler;import com.umeng.socialize.sso.UMSsoHandler;import com.umeng.socialize.weixin.controller.UMWXHandler;import com.umeng.socialize.weixin.media.CircleShareContent;import com.umeng.socialize.weixin.media.WeiXinShareContent;/** * @author: ZhangYaWei * @time:2015-5-23 * @Description:设置页面 */public class SetActivity extends BaseActivity {	// 修改密码,关于我们,版本更新,反馈,妈淘打分,分享妈淘,退出	// private Bean bean;	private Dialog dialog;	@ViewInject(R.id.set_updatepw)	private RelativeLayout updatepw;	@ViewInject(R.id.set_adoutus)	private RelativeLayout aboutus;	@ViewInject(R.id.set_feedback)	private RelativeLayout feedback;	@ViewInject(R.id.set_mataoscroe)	private RelativeLayout mataoscore;	@ViewInject(R.id.set_share)	private RelativeLayout sharematao;	@ViewInject(R.id.set_updateversion)	private LinearLayout updateversion;	@ViewInject(R.id.set_logoff)	private LinearLayout logoff;	@ViewInject(R.id.set_share_wxcircle)	private LinearLayout wxcircle;	@ViewInject(R.id.set_share_wx)	private LinearLayout wx;	@ViewInject(R.id.set_share_QZone)	private LinearLayout QZone;	@ViewInject(R.id.set_share_QQ)	private LinearLayout QQ;	@ViewInject(R.id.set_share_xl)	private LinearLayout xl;	@ViewInject(R.id.set_share_N)	private LinearLayout cancel2;	private TextView appversion, set_updatepw_text;	private String telephone;	// --------------------第三方分享-----------------------------------------------------------------	final UMSocialService mController = UMServiceFactory			.getUMSocialService("com.umeng.share");	// 妈淘下载链接	private String url = "http://m.matao.com/app/";	private void share(SHARE_MEDIA platformType) {		mController.getConfig().closeToast();		// 设置分享内容		mController.setShareContent("亲爱滴，我正在用妈淘APP，这里有各种宝妈囤货攻略和超低折扣优惠，赶紧来看看呃~");		// 设置分享图片，参数2为本地图片的资源引用		mController.setShareMedia(new UMImage(SetActivity.this,				R.drawable.ic_launcher_1));		// 设置QQ好友分享内容		QQShareContent qqShareContent = new QQShareContent();		// 设置分享文字		qqShareContent				.setShareContent("亲爱滴，我正在用妈淘APP，这里有各种宝妈囤货攻略和超低折扣优惠，赶紧来看看呃~");		// 设置分享title		qqShareContent.setTitle("给宝宝买什么，怎么买，买的便宜放心，就找她！");		// 设置分享图片		qqShareContent.setShareImage(new UMImage(SetActivity.this,				R.drawable.ic_launcher_1));		// 设置点击分享内容的跳转链接		qqShareContent.setTargetUrl(url);		mController.setShareMedia(qqShareContent);		// 设置QQ空间分享内容		QZoneShareContent qzone = new QZoneShareContent();		// 设置分享文字		qzone.setShareContent("亲爱滴，我正在用妈淘APP，这里有各种宝妈囤货攻略和超低折扣优惠，赶紧来看看呃~");		// 设置点击消息的跳转URL		qzone.setTargetUrl(url);		// 设置分享内容的标题		qzone.setTitle("给宝宝买什么，怎么买，买的便宜放心，就找她！");		// 设置分享图片		qzone.setShareImage(new UMImage(SetActivity.this,				R.drawable.ic_launcher_1));		mController.setShareMedia(qzone);		// 设置微信好友分享内容		WeiXinShareContent weixinContent = new WeiXinShareContent();		// 设置分享文字		weixinContent				.setShareContent("亲爱滴，我正在用妈淘APP，这里有各种宝妈囤货攻略和超低折扣优惠，赶紧来看看呃~");		// 设置title		weixinContent.setTitle("给宝宝买什么，怎么买，买的便宜放心，就找她！");		// 设置分享内容跳转URL		weixinContent.setTargetUrl(url);		// 设置分享图片		weixinContent.setShareImage(new UMImage(SetActivity.this,				R.drawable.ic_launcher_1));		mController.setShareMedia(weixinContent);		// 设置微信朋友圈分享内容		CircleShareContent circleMedia = new CircleShareContent();		circleMedia.setShareContent("亲爱滴，我正在用妈淘APP，这里有各种宝妈囤货攻略和超低折扣优惠，赶紧来看看呃~");		// 设置朋友圈title		circleMedia.setTitle("给宝宝买什么，怎么买，买的便宜放心，就找她！");		circleMedia.setShareImage(new UMImage(SetActivity.this,				R.drawable.ic_launcher_1));		circleMedia.setTargetUrl(url);		mController.setShareMedia(circleMedia);		// 参数1为Context类型对象， 参数2为要分享到的目标平台， 参数3为分享操作的回调接口		mController.postShare(SetActivity.this, platformType,				new SnsPostListener() {					@Override					public void onStart() {						// MTUtils.Toast(SetActivity.this, "开始分享");					}					@Override					public void onComplete(SHARE_MEDIA platform, int eCode,							SocializeEntity entity) {						if (eCode == 200) {							MTUtils.Toast(SetActivity.this, "分享成功");							switch (platform) {							case WEIXIN_CIRCLE:								fenXiangCG(0);								break;							case WEIXIN:								fenXiangCG(1);								break;							case QQ:								fenXiangCG(3);								break;							case QZONE:								fenXiangCG(2);								break;							case SINA:								fenXiangCG(4);								break;							}						} else {							// String eMsg = "";							// if (eCode == -101) {							// eMsg = "没有授权";							// }							MTUtils.Toast(SetActivity.this, "分享失败");						}					}				});	}	// -------------------------------------------------------------------------------------------	@OnClick({ R.id.set_updatepw, R.id.set_adoutus, R.id.set_feedback,			R.id.set_updateversion, R.id.set_mataoscroe, R.id.set_share,			R.id.set_share_N, R.id.set_share_QQ, R.id.set_share_QZone,			R.id.set_share_wx, R.id.set_share_xl, R.id.set_share_wxcircle,			R.id.set_logoff })	@Override	public void onClick(View v) {		Intent intent;		switch (v.getId()) {		case R.id.set_updatepw:			Intent i = getIntent();			telephone = i.getStringExtra("telephone");			Logger.i("phone", telephone);			Logger.i("boolena======", MTApplication.getThreeLogin()); // //			if (MTApplication.getThreeLogin() && telephone.equals("0")) {// 是第三方登录																			// 跳到绑定手机页面				intent = new Intent(SetActivity.this, BandActivity.class);				startActivity(intent);				overridePendingTransition(R.anim.slide_left_in,						R.anim.slide_left_out);			} else {				intent = new Intent(SetActivity.this, UpdatePwActivity.class);				startActivity(intent);				overridePendingTransition(R.anim.slide_left_in,						R.anim.slide_left_out);			}			break;		case R.id.set_adoutus:			intent = new Intent(SetActivity.this, AboutUsActivity.class);			startActivity(intent);			overridePendingTransition(R.anim.slide_left_in,					R.anim.slide_left_out);			break;		case R.id.set_feedback:			intent = new Intent(SetActivity.this, FeedBackActivity.class);			startActivity(intent);			overridePendingTransition(R.anim.slide_left_in,					R.anim.slide_left_out);			break;		case R.id.set_updateversion:			getVersion();			break;		case R.id.set_mataoscroe:			intent = new Intent();			intent.setData(Uri.parse("market://details?id=android.browser"));			List<ResolveInfo> list = getPackageManager().queryIntentActivities(					intent, PackageManager.MATCH_DEFAULT_ONLY);			// return 0 != list.size();			if (list.size() == 0) {				// 没有市场提示;				// 您手机没有安装任何android市场				MTUtils.Toast(SetActivity.this, "您手机没有安装任何市场!");			} else {				// 直接打开某个市场				// else if(list.size()==1){				// ResolveInfo aInfo=(ResolveInfo) list.get(0);//获取唯一一个应用的包名				// Intent intent =				// getPackageManager().getLaunchIntentForPackage(aInfo.activityInfo.packageName);				// intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);				// startActivity(intent);				// String str = "market://details?id=" + getPackageName();				// Intent localIntent = new				// Intent("android.intent.action.VIEW");				// localIntent.setData(Uri.parse(str));				// startActivity(localIntent);				// Toast.makeText(MainActivity.this,				// aInfo.activityInfo.packageName, Toast.LENGTH_SHORT ).show();				// }else {				// 展示所有android市场 供选择打分 如果只有一个 或默认定位到市场的我的应用下边 没有的会提示暂无应用信息				Uri uri = Uri.parse("market://details?id=" + getPackageName());				intent = new Intent(Intent.ACTION_VIEW, uri);				intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);				startActivity(intent);			}			break;		case R.id.set_share:			dialog = showDialog(dialog, R.layout.dialog_set_share);			break;		case R.id.set_share_wxcircle:			share(SHARE_MEDIA.WEIXIN_CIRCLE);			dialog.dismiss();			break;		case R.id.set_share_wx:			share(SHARE_MEDIA.WEIXIN);			dialog.dismiss();			break;		case R.id.set_share_QZone:			share(SHARE_MEDIA.QZONE);			dialog.dismiss();			break;		case R.id.set_share_QQ:			share(SHARE_MEDIA.QQ);			dialog.dismiss();			break;		case R.id.set_share_xl:			share(SHARE_MEDIA.SINA);			dialog.dismiss();			break;		case R.id.set_share_N:			dialog.dismiss();			break;		case R.id.set_logoff:			d = MTUtils.showDialog(this, this, "取消", "确定", "您确定要退出当前账户吗？");			break;		case R.id.dialog_N:			d.dismiss();			break;		case R.id.dialog_Y:			// 退出登录 需要再考虑			MTApplication.mEditor.putInt("UserId", 0);			MTApplication.mEditor.putInt("Point", 0);			MTApplication.mEditor.putString("Token", "");			MTApplication.setThreeLogin(false);			Logger.i("userid", MTApplication.getInt("UserId"));			MyHouseActivity.getInstence().finish();			BaseFragment.isJump = true;			startActivity(new Intent(SetActivity.this, HomeActivity.class));			overridePendingTransition(R.anim.slide_left_in,					R.anim.slide_left_out);			finish();			d.dismiss();			break;		}	}	private Dialog d;	private void getVersion() {		String versionNumber = MTApplication.mVersionName;		SendActtionTool				.get(URLs.GETVERSION + versionNumber,						ServiceAction.Action_User,						UserAction.Action_UpdaeVersion, this);	}	@Override	public void onSuccess(ServiceAction service, Object action, Object value) {		super.onSuccess(service, action, value);		Logger.i("msg", value.toString());		Bean bean = JSON.parseObject(value.toString(), Bean.class);		Data data = bean.getData();		switch ((UserAction) action) {		case Action_FXCG:			if (bean.getData().getPoint() > 0) {				MTUtils.JiFenToast(this, bean.getMsg());			}			break;		case Action_UpdaeVersion:			if (data.getVersionInfo().isIsLastVersion()) {				MTUtils.Toast(this, "你当前已是最新版本");			} else {				new UpdateManager(SetActivity.this, data.getVersionInfo()						.getUpgradeUrl(), data.getVersionInfo()						.isIsForceUpgrade(), data.getVersionInfo()						.getVersionLog());			}			break;		}	}	private void fenXiangCG(int MediaId) {		String TimeStamp = MTUtils.getTimeStamp();		int userId = MTApplication.getInt("UserId");		String token = MTApplication.getString("Token");		org.json.JSONObject json = new org.json.JSONObject();		try {			json.put(					"Sign",					MD5Util.getLowerCaseMD5(MediaId + "" + userId + token							+ TimeStamp + URLs.KEY));			json.put(URLs.TIME_STAMP, TimeStamp);			json.put("UserId", userId);			json.put("UserToken", token);			json.put("TypeId", 5);			json.put("MediaId", MediaId);			json.put("ContentId", 0);			Logger.i("json-Like", json.toString());		} catch (JSONException e) {			e.printStackTrace();		}		RequestParams p = new RequestParams();		p.addBodyParameter(URLs.JSON_INFO, json.toString());		SendActtionTool.post(URLs.FXCG, ServiceAction.Action_User,				UserAction.Action_FXCG, this, p);	}	@Override	public void onFaile(ServiceAction service, Object action, Object value) {		super.onFaile(service, action, value);		if ((UserAction) action == UserAction.Action_UpdaeVersion) {			org.json.JSONObject object;			try {				object = new org.json.JSONObject(value.toString());				String str = object.optString("Msg", "");				MTUtils.Toast(this, str);			} catch (JSONException e) {				e.printStackTrace();			}		}	}	@Override	public void onStart(ServiceAction service, Object action) {		super.onStart(service, action);	}	@Override	public void onException(ServiceAction service, Object action, Object value) {		super.onException(service, action, value);	}	@Override	public void onFinish(ServiceAction service, Object action) {		super.onFinish(service, action);	}	@Override	public void setContentView() {		setContentView(R.layout.activity_set);		ViewUtils.inject(this);	}	@Override	public void finish() {		super.finish();		overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);	}	@Override	public void onBackPressed() {		super.onBackPressed();		finish();	}	@Override	public void findViewById() {		appversion = (TextView) findViewById(R.id.set_appversion);		appversion.setText("v" + MTApplication.mVersionName);		set_updatepw_text = (TextView) findViewById(R.id.set_updatepw_text);		Intent i = getIntent();		telephone = i.getStringExtra("telephone");		Logger.i("phone", telephone);		Logger.i("phone2", MTApplication.getThreeLogin());		if (MTApplication.getThreeLogin() && telephone.equals("0")) {// 是第三方登录			Logger.i("phone3", telephone);			set_updatepw_text.setText("绑定手机");		}		TopBar topBar = (TopBar) findViewById(R.id.set_topbar);		// 头部返回键		topBar.setOnTopBarClickListener(new topBarClickListener() {			@Override			public void rightClick() {			}			@Override			public void leftClick() {				SetActivity.this.finish();				// overridePendingTransition(R.anim.slide_left_in,				// R.anim.slide_left_out);				finish();			}		});		ssoOK();	}	// ---------------各平台SSO（免登录）配置-----------------------------------------------------------	private void ssoOK() {		// 添加微信平台		UMWXHandler wxHandler = new UMWXHandler(SetActivity.this, URLs.WXAppID,				URLs.WXAppSecret);		wxHandler.addToSocialSDK();		// 添加微信朋友圈		UMWXHandler wxCircleHandler = new UMWXHandler(SetActivity.this,				URLs.WXAppID, URLs.WXAppSecret);		wxCircleHandler.setToCircle(true);		wxCircleHandler.addToSocialSDK();		// 添加QQ		UMQQSsoHandler qqSsoHandler = new UMQQSsoHandler(SetActivity.this,				URLs.QQAppID, URLs.QQAppSecret);		qqSsoHandler.addToSocialSDK();		// 添加QQ空间		QZoneSsoHandler qZoneSsoHandler = new QZoneSsoHandler(SetActivity.this,				URLs.QQAppID, URLs.QQAppSecret);		qZoneSsoHandler.addToSocialSDK();		// 设置新浪SSO handler		mController.getConfig().setSsoHandler(new SinaSsoHandler());		mController.getConfig().setSinaCallbackUrl("http://www.matao.com/");	}	// ----------------------------------------------------------------------------------------------	// SSO登录回调	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		super.onActivityResult(requestCode, resultCode, data);		/** 使用SSO授权必须添加如下代码 */		UMSsoHandler ssoHandler = mController.getConfig().getSsoHandler(				requestCode);		if (ssoHandler != null) {			ssoHandler.authorizeCallBack(requestCode, resultCode, data);		}	}	/**	 * 屏幕底部弹窗	 */	public Dialog showDialog(Dialog dialog, int layoutId) {		dialog = new Dialog(this, R.style.MmsDialogTheme);		dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);		View v = View.inflate(this, layoutId, null);		ViewUtils.inject(this, v);		dialog.setContentView(v);		WindowManager.LayoutParams lp = dialog.getWindow().getAttributes();		Display dsp = getWindowManager().getDefaultDisplay();		lp.width = (int) dsp.getWidth();		lp.y = (int) dsp.getHeight();		dialog.getWindow().setAttributes(lp);		dialog.setCanceledOnTouchOutside(true);		dialog.show();		return dialog;	}}